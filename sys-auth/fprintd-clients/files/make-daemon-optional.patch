Description: Make building of DBus daemon optional
 Just to avoid dependency on libfprint-2-dev while building the package.
 .
 fprintd-clients (1.90.1-2~ppa1~ubuntu18.04.3) bionic; urgency=medium
 .
   [ uunicorn ]
   * Repackage upstream with DBus clients only (no fprintd daemon itself)
Author: uunicorn <viktor.dragomiretskyy@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2020-07-08

--- fprintd-clients-1.90.1.orig/meson.build
+++ fprintd-clients-1.90.1/meson.build
@@ -71,7 +71,7 @@ add_project_arguments(common_cflags, lan
 glib_dep = dependency('glib-2.0', version: '>=' + glib_min_version)
 gio_dep = dependency('gio-2.0', version: '>=' + glib_min_version)
 gmodule_dep = dependency('gmodule-2.0', version: '>=' + glib_min_version)
-libfprint_dep = dependency('libfprint-2', version: '>=' + libfprint_min_version)
+libfprint_dep = dependency('libfprint-2', version: '>=' + libfprint_min_version, required: get_option('daemon'))
 polkit_gobject_dep = dependency('polkit-gobject-1', version: '>= 0.91')
 dbus_dep = dependency('dbus-1', required: false)
 dbus_glib_dep = dependency('dbus-glib-1')
@@ -120,20 +120,22 @@ pam_wrapper_dep = dependency('pam_wrappe
 
 xmllint = find_program('xmllint', required: false)
 python3 = find_program('python3') # No meson without it!
-python3_test_modules = {
-    'cairo': true,
-    'dbus': true,
-    'dbusmock': true,
-    'gi': true,
-    'pypamtest': get_option('pam'),
-}
-python3_available_modules = []
-
-foreach module, required : python3_test_modules
-    if required and run_command(python3, '-c', 'import @0@'.format(module)).returncode() != 0
-        error('Python3 module \'' + module + '\' required by test suite not found')
-    endif
-endforeach
+if get_option('daemon')
+    python3_test_modules = {
+        'cairo': true,
+        'dbus': true,
+        'dbusmock': true,
+        'gi': true,
+        'pypamtest': get_option('pam'),
+    }
+    python3_available_modules = []
+
+    foreach module, required : python3_test_modules
+        if required and run_command(python3, '-c', 'import @0@'.format(module)).returncode() != 0
+            error('Python3 module \'' + module + '\' required by test suite not found')
+        endif
+    endforeach
+endif
 
 cdata = configuration_data()
 cdata.set_quoted('GETTEXT_PACKAGE', meson.project_name())
@@ -156,7 +158,9 @@ endif
 if get_option('gtk_doc')
     subdir('doc')
 endif
-subdir('tests')
+if get_option('daemon')
+    subdir('tests')
+endif
 subdir('po')
 
 output = []
@@ -174,6 +178,7 @@ if get_option('pam')
     output += '  PAM module directory: ' + pam_modules_dir
 endif
 output += '\nOptional features:\n'
+output += '  DBus daemon: ' + get_option('daemon').to_string()
 output += '  PAM module: ' + pam_dep.found().to_string()
 output += '  Manuals: ' + get_option('man').to_string()
 output += '  GTK Doc: ' + get_option('gtk_doc').to_string()
--- fprintd-clients-1.90.1.orig/meson_options.txt
+++ fprintd-clients-1.90.1/meson_options.txt
@@ -1,3 +1,7 @@
+option('daemon',
+    description: 'Build the fprintd daemon',
+    type: 'boolean',
+    value: false)
 option('pam',
     description: 'Build the fprintd PAM module',
     type: 'boolean',
--- fprintd-clients-1.90.1.orig/src/meson.build
+++ fprintd-clients-1.90.1/src/meson.build
@@ -34,48 +34,51 @@ foreach interface_name: dbus_interfaces
     )
 endforeach
 
-fprintd_deps = declare_dependency(
-    include_directories: [
-        include_directories('..'),
-    ],
-    dependencies: [
-        dbus_glib_dep,
-        glib_dep,
-        gio_dep,
-        gmodule_dep,
-        libfprint_dep,
-        polkit_gobject_dep,
-    ],
-    compile_args: [
-        '-DG_LOG_DOMAIN="@0@"'.format(meson.project_name()),
-        '-DLOCALEDIR="@0@"'.format(localedir),
-        '-DPLUGINDIR="@0@"'.format(fprintd_plugindir),
-    ],
-)
+if get_option('daemon') 
+    fprintd_deps = declare_dependency(
+        include_directories: [
+            include_directories('..'),
+        ],
+        dependencies: [
+            dbus_glib_dep,
+            glib_dep,
+            gio_dep,
+            gmodule_dep,
+            libfprint_dep,
+            polkit_gobject_dep,
+        ],
+        compile_args: [
+            '-DG_LOG_DOMAIN="@0@"'.format(meson.project_name()),
+            '-DLOCALEDIR="@0@"'.format(localedir),
+            '-DPLUGINDIR="@0@"'.format(fprintd_plugindir),
+        ],
+    )
+
+    libfprintd_private = static_library('fprintd-private',
+        sources: [
+            'device.c',
+            'fprintd.h',
+            'manager.c',
+            dbus_server_glue_sources,
+            fprintd_marshal,
+        ],
+        dependencies: fprintd_deps,
+        gnu_symbol_visibility: 'hidden',
+    )
 
-libfprintd_private = static_library('fprintd-private',
-    sources: [
-        'device.c',
-        'fprintd.h',
-        'manager.c',
-        dbus_server_glue_sources,
-        fprintd_marshal,
-    ],
-    dependencies: fprintd_deps,
-    gnu_symbol_visibility: 'hidden',
-)
+    fprintd = executable('fprintd',
+        sources: [
+            'file_storage.c',
+            'file_storage.h',
+            'fprintd.h',
+            'main.c',
+            'storage.h',
+        ],
+        dependencies: fprintd_deps,
+        link_with: libfprintd_private,
+        gnu_symbol_visibility: 'hidden',
+        install: true,
+        install_dir: fprintd_installdir,
+    )
 
-fprintd = executable('fprintd',
-    sources: [
-        'file_storage.c',
-        'file_storage.h',
-        'fprintd.h',
-        'main.c',
-        'storage.h',
-    ],
-    dependencies: fprintd_deps,
-    link_with: libfprintd_private,
-    gnu_symbol_visibility: 'hidden',
-    install: true,
-    install_dir: fprintd_installdir,
-)
+endif
