diff -Nur linux-kukui/arch/arm64/boot/dts/mediatek/mt8183.dtsi linux-kukui-gud/arch/arm64/boot/dts/mediatek/mt8183.dtsi
--- linux-kukui/arch/arm64/boot/dts/mediatek/mt8183.dtsi	2021-07-13 17:16:13.752666183 +0200
+++ linux-kukui-gud/arch/arm64/boot/dts/mediatek/mt8183.dtsi	2021-07-13 17:01:43.516154051 +0200
@@ -1581,7 +1581,15 @@
 				<GIC_SPI 278 IRQ_TYPE_LEVEL_LOW>;
 			interrupt-names = "job", "mmu", "gpu";
 
-			clocks = <&topckgen CLK_TOP_MFGPLL_CK>;
+			clocks = <&topckgen CLK_TOP_MFGPLL_CK>,
+				 <&topckgen CLK_TOP_MUX_MFG>,
+				 <&clk26m>,
+				 <&mfgcfg CLK_MFG_BG3D>;
+			clock-names =
+				 "clk_main_parent",
+				 "clk_mux",
+				 "clk_sub_parent",
+				 "subsys_mfg_cg";
 
 			power-domains =
 				<&spm MT8183_POWER_DOMAIN_MFG_CORE0>,
diff -Nur linux-kukui/arch/arm64/boot/dts/mediatek/mt8183-kukui.dtsi linux-kukui-gud/arch/arm64/boot/dts/mediatek/mt8183-kukui.dtsi
--- linux-kukui/arch/arm64/boot/dts/mediatek/mt8183-kukui.dtsi	2021-07-13 17:16:13.756666129 +0200
+++ linux-kukui-gud/arch/arm64/boot/dts/mediatek/mt8183-kukui.dtsi	2021-07-13 16:53:12.906778709 +0200
@@ -295,6 +295,7 @@
 };
 
 &gpu {
+	supply-names = "mali", "sram";
 	mali-supply = <&mt6358_vgpu_reg>;
 	sram-supply = <&mt6358_vsram_gpu_reg>;
 };
diff -Nur linux-kukui/drivers/gpu/drm/mediatek/mtk_dsi.c linux-kukui-gud/drivers/gpu/drm/mediatek/mtk_dsi.c
--- linux-kukui/drivers/gpu/drm/mediatek/mtk_dsi.c	2021-07-12 00:07:40.000000000 +0200
+++ linux-kukui-gud/drivers/gpu/drm/mediatek/mtk_dsi.c	2021-07-13 17:02:25.091608881 +0200
@@ -7,10 +7,12 @@
 #include <linux/component.h>
 #include <linux/iopoll.h>
 #include <linux/irq.h>
+#include <linux/mfd/syscon.h>
 #include <linux/of.h>
 #include <linux/of_platform.h>
 #include <linux/phy/phy.h>
 #include <linux/platform_device.h>
+#include <linux/regmap.h>
 
 #include <video/mipi_display.h>
 #include <video/videomode.h>
@@ -143,6 +145,8 @@
 #define DATA_0				(0xff << 16)
 #define DATA_1				(0xff << 24)
 
+#define MMSYS_SW_RST_DSI_B BIT(25)
+
 #define NS_TO_CYCLE(n, c)    ((n) / (c) + (((n) % (c)) ? 1 : 0))
 
 #define MTK_DSI_HOST_IS_READ(type) \
@@ -187,6 +191,8 @@
 	struct drm_connector *connector;
 	struct phy *phy;
 
+	struct regmap *mmsys_sw_rst_b;
+	u32 sw_rst_b;
 	void __iomem *regs;
 
 	struct clk *engine_clk;
@@ -272,6 +278,15 @@
 	mtk_dsi_mask(dsi, DSI_CON_CTRL, DSI_EN, 0);
 }
 
+static void mtk_dsi_reset_all(struct mtk_dsi *dsi)
+{
+	regmap_update_bits(dsi->mmsys_sw_rst_b, dsi->sw_rst_b,
+			MMSYS_SW_RST_DSI_B, 0);
+	usleep_range(1000, 1100);
+	regmap_update_bits(dsi->mmsys_sw_rst_b, dsi->sw_rst_b,
+			MMSYS_SW_RST_DSI_B, MMSYS_SW_RST_DSI_B);
+}
+
 static void mtk_dsi_reset_engine(struct mtk_dsi *dsi)
 {
 	mtk_dsi_mask(dsi, DSI_CON_CTRL, DSI_RESET, DSI_RESET);
@@ -981,6 +996,8 @@
 
 	ret = mtk_dsi_encoder_init(drm, dsi);
 
+	mtk_dsi_reset_all(dsi);
+
 	return ret;
 }
 
@@ -1003,6 +1020,7 @@
 	struct device *dev = &pdev->dev;
 	struct drm_panel *panel;
 	struct resource *regs;
+	struct regmap *regmap;
 	int irq_num;
 	int ret;
 
@@ -1018,6 +1036,22 @@
 		return ret;
 	}
 
+	regmap = syscon_regmap_lookup_by_phandle(dev->of_node,
+			"mediatek,syscon-dsi");
+	ret = of_property_read_u32_index(dev->of_node, "mediatek,syscon-dsi", 1,
+			&dsi->sw_rst_b);
+
+	if (IS_ERR(regmap))
+		ret = PTR_ERR(regmap);
+
+	if (ret) {
+		ret = PTR_ERR(regmap);
+		dev_err(dev, "Failed to get mmsys registers: %d\n", ret);
+		return ret;
+	}
+
+	dsi->mmsys_sw_rst_b = regmap;
+
 	ret = drm_of_find_panel_or_bridge(dev->of_node, 0, 0,
 					  &panel, &dsi->next_bridge);
 	if (ret)
diff -Nur linux-kukui/drivers/gpu/drm/panfrost/panfrost_devfreq.c linux-kukui-gud/drivers/gpu/drm/panfrost/panfrost_devfreq.c
--- linux-kukui/drivers/gpu/drm/panfrost/panfrost_devfreq.c	2021-07-12 00:07:40.000000000 +0200
+++ linux-kukui-gud/drivers/gpu/drm/panfrost/panfrost_devfreq.c	2021-07-13 17:06:49.336132219 +0200
@@ -92,15 +92,6 @@
 	struct thermal_cooling_device *cooling;
 	struct panfrost_devfreq *pfdevfreq = &pfdev->pfdevfreq;
 
-	if (pfdev->comp->num_supplies > 1) {
-		/*
-		 * GPUs with more than 1 supply require platform-specific handling:
-		 * continue without devfreq
-		 */
-		DRM_DEV_INFO(dev, "More than 1 supply is not supported yet\n");
-		return 0;
-	}
-
 	ret = devm_pm_opp_set_regulators(dev, pfdev->comp->supply_names,
 					 pfdev->comp->num_supplies);
 	if (ret) {
