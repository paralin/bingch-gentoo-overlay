From 937083bbe10b7c506ee48435dce4c18931f31a5c Mon Sep 17 00:00:00 2001
From: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date: Sun, 14 Mar 2021 01:24:07 +0100
Subject: [PATCH 1/4] text-input: Don't leave dangling roots_text_input signal
 listeners

---
 src/text_input.c | 60 +++++++++++++++++++-----------------------------
 src/text_input.h |  8 +++----
 2 files changed, 28 insertions(+), 40 deletions(-)

diff --git a/src/text_input.c b/src/text_input.c
index 8317897..d5d64e4 100644
--- a/src/text_input.c
+++ b/src/text_input.c
@@ -126,27 +126,14 @@ static void relay_send_im_done(struct roots_input_method_relay *relay,
 	// TODO: pass intent, display popup size
 }
 
-static struct roots_text_input *text_input_to_roots(
-		struct roots_input_method_relay *relay,
-		struct wlr_text_input_v3 *text_input) {
-	struct roots_text_input *roots_text_input = NULL;
-	wl_list_for_each(roots_text_input, &relay->text_inputs, link) {
-		if (roots_text_input->input == text_input) {
-			return roots_text_input;
-		}
-	}
-	return NULL;
-}
-
 static void handle_text_input_enable(struct wl_listener *listener, void *data) {
-	struct roots_input_method_relay *relay = wl_container_of(listener, relay,
-		text_input_enable);
+	struct roots_text_input *text_input = wl_container_of(listener, text_input,
+		enable);
+	struct roots_input_method_relay *relay = text_input->relay;
 	if (relay->input_method == NULL) {
 		wlr_log(WLR_INFO, "Enabling text input when input method is gone");
 		return;
 	}
-	struct roots_text_input *text_input = text_input_to_roots(relay,
-		(struct wlr_text_input_v3*)data);
 	// relay_send_im_done protects from receiving unfocussed done,
 	// but activate must be prevented too.
 	// TODO: when enter happens?
@@ -159,10 +146,9 @@ static void handle_text_input_enable(struct wl_listener *listener, void *data) {
 
 static void handle_text_input_commit(struct wl_listener *listener,
 		void *data) {
-	struct roots_input_method_relay *relay = wl_container_of(listener, relay,
-		text_input_commit);
-	struct roots_text_input *text_input = text_input_to_roots(relay,
-		(struct wlr_text_input_v3*)data);
+	struct roots_text_input *text_input = wl_container_of(listener, text_input,
+		commit);
+	struct roots_input_method_relay *relay = text_input->relay;
 	if (!text_input->input->current_enabled) {
 		wlr_log(WLR_INFO, "Inactive text input tried to commit an update");
 		return;
@@ -192,24 +178,26 @@ static void relay_disable_text_input(struct roots_input_method_relay *relay,
 
 static void handle_text_input_disable(struct wl_listener *listener,
 		void *data) {
-	struct roots_input_method_relay *relay = wl_container_of(listener, relay,
-		text_input_disable);
-	struct roots_text_input *text_input = text_input_to_roots(relay,
-		(struct wlr_text_input_v3*)data);
+	struct roots_text_input *text_input = wl_container_of(listener, text_input,
+		disable);
+	struct roots_input_method_relay *relay = text_input->relay;
 	relay_disable_text_input(relay, text_input);
 }
 
 static void handle_text_input_destroy(struct wl_listener *listener,
 		void *data) {
-	struct roots_input_method_relay *relay = wl_container_of(listener, relay,
-		text_input_destroy);
-	struct roots_text_input *text_input = text_input_to_roots(relay,
-		(struct wlr_text_input_v3*)data);
+	struct roots_text_input *text_input = wl_container_of(listener, text_input,
+		destroy);
+	struct roots_input_method_relay *relay = text_input->relay;
 
 	if (text_input->input->current_enabled) {
 		relay_disable_text_input(relay, text_input);
 	}
 	text_input_clear_pending_focused_surface(text_input);
+	wl_list_remove(&text_input->commit.link);
+	wl_list_remove(&text_input->destroy.link);
+	wl_list_remove(&text_input->disable.link);
+	wl_list_remove(&text_input->enable.link);
 	wl_list_remove(&text_input->link);
 	text_input->input = NULL;
 	free(text_input);
@@ -234,17 +222,17 @@ struct roots_text_input *roots_text_input_create(
 	input->input = text_input;
 	input->relay = relay;
 
-	wl_signal_add(&text_input->events.enable, &relay->text_input_enable);
-	relay->text_input_enable.notify = handle_text_input_enable;
+	wl_signal_add(&text_input->events.enable, &input->enable);
+	input->enable.notify = handle_text_input_enable;
 
-	wl_signal_add(&text_input->events.commit, &relay->text_input_commit);
-	relay->text_input_commit.notify = handle_text_input_commit;
+	wl_signal_add(&text_input->events.commit, &input->commit);
+	input->commit.notify = handle_text_input_commit;
 
-	wl_signal_add(&text_input->events.disable, &relay->text_input_disable);
-	relay->text_input_disable.notify = handle_text_input_disable;
+	wl_signal_add(&text_input->events.disable, &input->disable);
+	input->disable.notify = handle_text_input_disable;
 
-	wl_signal_add(&text_input->events.destroy, &relay->text_input_destroy);
-	relay->text_input_destroy.notify = handle_text_input_destroy;
+	wl_signal_add(&text_input->events.destroy, &input->destroy);
+	input->destroy.notify = handle_text_input_destroy;
 
 	input->pending_focused_surface_destroy.notify =
 		handle_pending_focused_surface_destroy;
diff --git a/src/text_input.h b/src/text_input.h
index ceee3ad..9830b0c 100644
--- a/src/text_input.h
+++ b/src/text_input.h
@@ -25,10 +25,6 @@ struct roots_input_method_relay {
 	struct wlr_input_method_v2 *input_method; // doesn't have to be present
 
 	struct wl_listener text_input_new;
-	struct wl_listener text_input_enable;
-	struct wl_listener text_input_commit;
-	struct wl_listener text_input_disable;
-	struct wl_listener text_input_destroy;
 
 	struct wl_listener input_method_new;
 	struct wl_listener input_method_commit;
@@ -47,6 +43,10 @@ struct roots_text_input {
 	struct wl_list link;
 
 	struct wl_listener pending_focused_surface_destroy;
+	struct wl_listener enable;
+	struct wl_listener commit;
+	struct wl_listener disable;
+	struct wl_listener destroy;
 };
 
 void roots_input_method_relay_init(struct roots_seat *seat,
-- 
2.26.2


From cfd9c16563b8bb82fe794cf62b9e070c966bc125 Mon Sep 17 00:00:00 2001
From: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date: Sun, 14 Mar 2021 01:26:30 +0100
Subject: [PATCH 2/4] text-input: Use text_input_clear_pending_focused_surface
 in handle_pending_focused_surface_destroy

This also removes the destroy signal listener of the pending surface.
---
 src/text_input.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/text_input.c b/src/text_input.c
index d5d64e4..cba6dbf 100644
--- a/src/text_input.c
+++ b/src/text_input.c
@@ -209,7 +209,7 @@ static void handle_pending_focused_surface_destroy(struct wl_listener *listener,
 		pending_focused_surface_destroy);
 	struct wlr_surface *surface = data;
 	assert(text_input->pending_focused_surface == surface);
-	text_input->pending_focused_surface = NULL;
+	text_input_clear_pending_focused_surface(text_input);
 }
 
 struct roots_text_input *roots_text_input_create(
-- 
2.26.2


From d85ce480de44d8a3b7c4f9e4e6a02de195c0a89b Mon Sep 17 00:00:00 2001
From: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date: Sun, 14 Mar 2021 01:32:45 +0100
Subject: [PATCH 3/4] text-input: Remove relay's signal listeners when seat is
 destroyed

---
 src/seat.c       | 2 ++
 src/text_input.c | 5 +++++
 src/text_input.h | 2 ++
 3 files changed, 9 insertions(+)

diff --git a/src/seat.c b/src/seat.c
index d03f6d4..06229a6 100644
--- a/src/seat.c
+++ b/src/seat.c
@@ -763,6 +763,8 @@ static void roots_seat_handle_destroy(struct wl_listener *listener,
 	// TODO: probably more to be freed here
 	wl_list_remove(&seat->destroy.link);
 
+	roots_input_method_relay_destroy(&seat->im_relay);
+
 	struct roots_seat_view *view, *nview;
 	wl_list_for_each_safe(view, nview, &seat->views, link) {
 		seat_view_destroy(view);
diff --git a/src/text_input.c b/src/text_input.c
index cba6dbf..1fd28ba 100644
--- a/src/text_input.c
+++ b/src/text_input.c
@@ -304,6 +304,11 @@ void roots_input_method_relay_init(struct roots_seat *seat,
 		&relay->input_method_new);
 }
 
+void roots_input_method_relay_destroy(struct roots_input_method_relay *relay) {
+	wl_list_remove(&relay->text_input_new.link);
+	wl_list_remove(&relay->input_method_new.link);
+}
+
 void roots_input_method_relay_set_focus(struct roots_input_method_relay *relay,
 		struct wlr_surface *surface) {
 	struct roots_text_input *text_input;
diff --git a/src/text_input.h b/src/text_input.h
index 9830b0c..ad1d29a 100644
--- a/src/text_input.h
+++ b/src/text_input.h
@@ -52,6 +52,8 @@ struct roots_text_input {
 void roots_input_method_relay_init(struct roots_seat *seat,
 	struct roots_input_method_relay *relay);
 
+void roots_input_method_relay_destroy(struct roots_input_method_relay *relay);
+
 // Updates currently focused surface. Surface must belong to the same seat.
 void roots_input_method_relay_set_focus(struct roots_input_method_relay *relay,
 	struct wlr_surface *surface);
-- 
2.26.2


From bee698370a09e998b605622d4e128fbb57f8cb13 Mon Sep 17 00:00:00 2001
From: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date: Sun, 14 Mar 2021 01:45:47 +0100
Subject: [PATCH 4/4] text-input: Assert a non-null surface in
 text_input_set_pending_focused_surface

---
 src/text_input.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/text_input.c b/src/text_input.c
index 1fd28ba..8ae21c4 100644
--- a/src/text_input.c
+++ b/src/text_input.c
@@ -71,6 +71,7 @@ static void text_input_clear_pending_focused_surface(
 static void text_input_set_pending_focused_surface(
 		struct roots_text_input *text_input, struct wlr_surface *surface) {
 	text_input_clear_pending_focused_surface(text_input);
+	g_assert(surface);
 	text_input->pending_focused_surface = surface;
 	wl_signal_add(&surface->events.destroy,
 		&text_input->pending_focused_surface_destroy);
-- 
2.26.2

